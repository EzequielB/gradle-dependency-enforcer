plugins {
    //id 'net.saliman.cobertura' version '2.3.1'
    id 'groovy'
    id 'java'
    id 'maven'
    id 'maven-publish'
}

group 'io.github.ezequielb'
version '1.0.0'
description 'Gradle plugin to enforce dependencies in a finer way within a project artifact'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.apache.maven.shared:maven-dependency-analyzer:1.6'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }

    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

task bintrayDeployDescriptor << {
    def groupPath = project.group.split('\\.').join('/')
    def bintrayDeployDescriptor =
"""
{
    "package": {
        "name": "$project.name",
        "repo": "maven",
        "subject": "ezequielb",
        "desc": "$project.description",
        "website_url": "https://github.com/EzequielB/gradle-dependency-enforcer",
        "issue_tracker_url": "https://github.com/EzequielB/gradle-dependency-enforcer/issues",
        "vcs_url": "https://github.com/EzequielB/gradle-dependency-enforcer.git",
        "github_use_tag_release_notes": true,
        "github_release_notes_file": "RELEASE.txt",
        "licenses": ["MIT"],
        "labels": ["gradle", "plugin", "dependency", "enforce"],
        "public_download_numbers": false,
        "public_stats": false
    },

    "version": {
        "name": "$project.version",
        "desc": "$project.description",
        "released": "${new Date().format('yyyy-MM-dd')}",
        "vcs_tag": "$project.version",
        "gpgSign": false
    },

    "files":[
        {
            "includePattern": "build/repo/$groupPath/$project.name/$project.version/(.*)",
            "uploadPattern": "$groupPath/$project.name/$project.version/\$1"
        }
    ],
    "publish": true
}
"""
    def descriptorFile = new File("$buildDir/bintrayDeployDescriptor.json")
    descriptorFile.getParentFile().mkdirs()
    descriptorFile.createNewFile()
    descriptorFile.text = bintrayDeployDescriptor
}

// TODO: which code coverage tool?

//jacocoTestReport {
//    reports {
//        xml.enabled false
//        csv.enabled false
//        html.enabled true
//        html.destination "${buildDir}/jacocoHtml"
//    }
//}


